@model DAL.Models.Gazette

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Secomdary_Layout.cshtml";
}

<h2>Edit</h2>



    <div class="container" style="background:none;">
        <div class="row outer-Box" style="margin-top:20px; padding-bottom:0!important;">
            <div class="col-md-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        Please complete the form
                    </div>
                    <div class="panel-body" style="background:#f3f3f3;">

                        <div class="row" style="padding:20px 50px;">

                            @using (Html.BeginForm())
                            {

                                @Html.HiddenFor(c=>c.Id)
                                @Html.HiddenFor(c => c.Created)
                                @Html.HiddenFor(c => c.Modified)
                                @Html.HiddenFor(c => c.isDeleted)
                                @Html.HiddenFor(c => c.FirmID)
                                @Html.HiddenFor(c => c.MemberID)
                                @Html.HiddenFor(c => c.GazetteVolumeID)

                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">

                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.GazetteVolumeID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.GazetteVolumeID, (IEnumerable<SelectListItem>)ViewBag.GazetteVolumes, "Chooce an option", new { @class = "form-control" })
                                            @Html.ActionLink("Add New Gazette Volume", "insertGazetteVolume")
                                            @Html.ValidationMessageFor(model => model.GazetteVolumeID, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.MemberID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.MemberID, (IEnumerable<SelectListItem>)ViewBag.Member, "Chooce an option", new { @class = "form-control" })

                                            @Html.ValidationMessageFor(model => model.MemberID, null, new { @class = "text-danger" })
                                        </div>
                                    </div>



                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FirmID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(model => model.FirmID, (IEnumerable<SelectListItem>)ViewBag.Firm, "Chooce an option", new { @class = "form-control" })


                                            @Html.ValidationMessageFor(model => model.FirmID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.header, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.header, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.header, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            @Html.TextAreaFor(model => model.Content, 80, 10, new { @class = "form-control ckeditor investment-detail-content", @name = "editor1" })`
                                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                                        </div>
                                    </div>



                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Create" class="btn btn-default" />
                                        </div>
                                    </div>
                                </div>
                            }

                            <div>
                                @Html.ActionLink("Back to List", "Index")
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
