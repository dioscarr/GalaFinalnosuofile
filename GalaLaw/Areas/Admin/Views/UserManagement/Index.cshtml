@model GalaLaw.Areas.Admin.Models.Usermanagement
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/Admin_Layout.cshtml";
}

<div class="container" style="background:none   ;">

    <div class="row outer-Box" style="margin-top:20px; padding-bottom:0!important;">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    Manage Roles
                </div>
                <div class="panel-body" style="background:#f3f3f3;">
                    <div class="form-group " style="padding-bottom:0!important;">

                        <div class="col-md-6">
                            @Html.ActionLink("Create Role", "Create", "UserManagement")
                        </div>
                        <div class="col-md-6">
                            @Html.ActionLink("Create Role", "Register", "Account", new { area = "" }, null)
                        </div>

                        <table class="table table-bordered table-striped table-hover">

                            @foreach (var item in @Model.Roles)
                            {
                                <tr>
                                    <td>
                                        @item.Name
                                    </td>
                                    <td>
                                        @Html.ActionLink("Delete", "DeleteRole", new { RoleName = @item.Name, area = "Admin" })
                                    </td>
                                </tr>

                            }



                        </table>


                        @using (Html.BeginForm(null, null, FormMethod.Post, null))
                        {
                            <div class="col-md-12" style="background:white; border:1px ">
                                <div>
                                    <div class="col-md-6" style="padding:0px!important; margin:0px!important;">
                                        <br />
                                        Select Member
                                        @Html.DropDownListFor(model => @Model.EmailAddress, @Model.Members.Select(c => new SelectListItem
                               {
                                   Text = c.FName + " " + c.LName + " ---Email:" + c.Email+": Pass:"+c.Password,
                                   Value = c.Email
                               }).AsEnumerable(), "Select a member to change type", new { @class = "form-control col-md-8" })


                                        <br />
                                        Select Role
                                        @Html.DropDownListFor(model => @Model.RoleName, @Model.Roles.Select(c => new SelectListItem { Text = c.Name, Value = c.Name }).AsEnumerable(), new { @class = "form-control" })

                                        <br />
                                        @Html.TextBoxFor(model=>model.newPassword, new { @class="form-control"} )
                                        <br />

                                        <button type="submit" class="btn btn-default col-md-12">Assign Role</button>

                                    </div>
                                    <br />
                                    <br />

                                    <div class="col-md-6" >
                                       <span class="col-md-4">Selected Member:</span>
                                        <span class="col-md-4">Member UserName:</span>
                                        <span class="col-md-4">Member Password:</span>
                                        <div class="col-md-12"><hr/></div>
                                        <span data-bind="text:SelectedMember" class="col-md-4"></span>
                                        <span data-bind="text:MemberUserName" class="col-md-4"></span>
                                        <span data-bind="text:Pass" class="col-md-4"></span>
                                        <div class="col-md-12"><hr /></div>
                                        <div data-bind="foreach:Roles" class="col-md-12">
                                            <span>Roles: </span>
                                            <span style="color:darkseagreen;" data-bind="text:$data"></span><a href="" data-bind="click:function(){removeRole($data)}, text:' Remove', style: { color:'red' }"></a>
                                             <br />
                                        </div>
                                    </div>
                                </div>
                              
                            </div>
                        }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


@section scripts
{
<script src="~/Scripts/knockout-3.4.0.js"></script>

    <script type="text/javascript">
        $(function () {

            var vm = function () {

                var self = this;

                self.Roles = ko.observableArray();
                self.SelectedMember = ko.observable();
                self.MemberUserName = ko.observable();
                self.Pass = ko.observable();
               

            $('#EmailAddress').change(function () {
                var isEmailinRole = $('#EmailAddress option:selected').val(); // value to check if user has a role and it does then return the role.
                var selected = $('#EmailAddress option:selected').text()
               
                var selectedArray = selected.split("---");
                var selectedArray2 = selected.split(":");
                var userName = selectedArray[0];
                var Email = selectedArray2[1];
                debugger;
                var Pass = selectedArray2[3];
                self.Pass(Pass);
                self.MemberUserName(Email);


                self.removeRole = function (RoleName) {
                    debugger;
                    var isEmailinRole = $('#EmailAddress option:selected').val();
                 
                

                   removeRoleAjax(RoleName, isEmailinRole);

                };
                self.removeRoleAjax = function (RoleName, Email)
                {
                   // alert(RoleName + " " + Email);

                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("RemoveRoles")',
                        data: { "RoleName": RoleName, "Email": Email },
                        dataType: "json",
                        success: function (data) {
                            self.Roles(data.Data);
                        }
                    });
                }
                
                self.SelectedMember(userName);
                if (isEmailinRole != "" || isEmailinRole != null)
                {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("getRoles")',
                        data: { "Email": isEmailinRole },
                        dataType: "json",
                        success: function (data) {                         
                          self.Roles(data.Data);
                        }
                    });
                }
                //Call to the controller / action that will handle i
                
            });


            };
           
           
            ko.applyBindings(vm);

        });

    </script>
   }
